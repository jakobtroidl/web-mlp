[block]] struct Matrix {
    data: array<f32>;
};

[[group(0), binding(0)]] var<storage_buffer> matrixA: Matrix;
[[group(0), binding(1)]] var<storage_buffer> matrixB: Matrix;
[[group(0), binding(2)]] var<storage_buffer> matrixC: Matrix;

[[stage(compute), workgroup_size(16, 16)]]
fn main([[builtin(global_invocation_id)]] global_id: vec3<u32>) {
    var x: u32 = global_id.x;
    var y: u32 = global_id.y;

    var sum: f32 = 0.0;
    for (var k: u32 = 0u; k < 16u; k = k + 1u) {
      sum = sum + matrixA.data[y * 16u + k] * matrixB.data[k * 16u + x];
    }

    matrixC.data[y * 16u + x] = sum;
}